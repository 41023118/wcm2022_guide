<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>網際內容管理</title><link href="./" rel="alternate"></link><link href="./feeds/all.atom.xml" rel="self"></link><id>./</id><updated>2022-05-13T22:24:59+08:00</updated><entry><title>學校 IPv6 網路不通</title><link href="./wcm2022-w12-IPv6-failed-on-nfu-network.html" rel="alternate"></link><published>2022-05-13T11:00:00+08:00</published><updated>2022-05-13T22:24:59+08:00</updated><author><name>kmolab</name></author><id>tag:None,2022-05-13:./wcm2022-w12-IPv6-failed-on-nfu-network.html</id><summary type="html">&lt;p&gt;從前天下午大約兩點開始, 學校的 IPv6 路由就已經無法對外連線, 但對一般師生來說, 這似乎不是甚麼大不了的問題.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;從前天下午大約兩點開始, 學校的 IPv6 路由就已經無法對外連線, 但對一般師生來說, 這似乎不是甚麼大不了的問題.&lt;/p&gt;


&lt;p&gt;因為 IPv6 網路協定, 在這裡就好像化外之物, 在乎的用戶並沒有很多.&lt;/p&gt;
&lt;p&gt;希望查核 www.nfu.edu.tw 的 IPv6 是否連通, 可以使用 &lt;a href="https://ready.chair6.net/?url=www.nfu.edu.tw"&gt;https://ready.chair6.net/?url=www.nfu.edu.tw&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src="../images/nfu_2022_0513_failed_onIPv6.png" width="600" height="400"&gt;&lt;/image&gt;&lt;/p&gt;
&lt;p&gt;由於 IPv6 connectivity 已經斷線超過 60 個小時, 因此過去兩天上課不得不僅依靠時斷時通的 IPv4 網路連線.&lt;/p&gt;
&lt;p&gt;但也有好消息, 幾經波折, &lt;a href="https://pages.github.com/"&gt;Github Pages&lt;/a&gt; 終於&lt;a href="https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site"&gt;支援 IPv6&lt;/a&gt;.&lt;/p&gt;</content><category term="wcm"></category><category term="2022SpringWCM"></category></entry><entry><title>w11 寫 Pelican 網誌</title><link href="./wcm2022-w11-write-pelican-blog.html" rel="alternate"></link><published>2022-05-11T11:00:00+08:00</published><updated>2022-05-02T00:04:56+08:00</updated><author><name>kmolab</name></author><id>tag:None,2022-05-11:./wcm2022-w11-write-pelican-blog.html</id><summary type="html">&lt;p&gt;&lt;a href="https://blog.getpelican.com/"&gt;Pelican&lt;/a&gt; 是一個建立網誌系統的輔助程式套件, 以 Python 編寫, 使用者可以使用 &lt;a href="https://en.wikipedia.org/wiki/Markdown"&gt;Markdown&lt;/a&gt; 格式建立文章, 然後交由 &lt;a href="https://blog.getpelican.com/"&gt;Pelican&lt;/a&gt; 轉為網際日誌超文件檔案.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;&lt;a href="https://blog.getpelican.com/"&gt;Pelican&lt;/a&gt; 是一個建立網誌系統的輔助程式套件, 以 Python 編寫, 使用者可以使用 &lt;a href="https://en.wikipedia.org/wiki/Markdown"&gt;Markdown&lt;/a&gt; 格式建立文章, 然後交由 &lt;a href="https://blog.getpelican.com/"&gt;Pelican&lt;/a&gt; 轉為網際日誌超文件檔案.&lt;/p&gt;


&lt;h1&gt;何謂網誌?&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Blog"&gt;Blog&lt;/a&gt; 中文稱為部落格, 全稱為 Weblog. 通常指一種依照日期逆向順序排列的敘事網站內容. 使用者可以透過關鍵字查詢網誌內容, 也可以透過各種分類方式列出網誌文章. 其中包括按照文章主題、作者與關鍵字排列閱讀網誌內容.&lt;/p&gt;
&lt;p&gt;由於網誌作者每新增一篇文章, 網站就必須重新配置文章分類連結、作者提供文章連結以及關鍵字查詢更新等整合事項, 因此將一篇文章發布在網誌系統的工作流程通常由程式進行轉檔, 而 &lt;a href="https://blog.getpelican.com/"&gt;Pelican&lt;/a&gt; 就是負責將使用者所提供的各篇文章內容整合轉檔為網誌系統的工具之一.&lt;/p&gt;
&lt;h1&gt;如何寫網誌?&lt;/h1&gt;
&lt;h2&gt;網誌關鍵內容&lt;/h2&gt;
&lt;p&gt;利用 &lt;a href="https://en.wikipedia.org/wiki/Markdown"&gt;Markdown&lt;/a&gt; 編寫 &lt;a href="https://blog.getpelican.com/"&gt;Pelican&lt;/a&gt; 網誌文章的最前頭, 必須要提供文章標題 (Title), 文章日期 (Date), 文章分類 (Category), 文章標籤 (Tags), 文章超文件檔案名稱 (Slug), 以及文章作者 (Author) 等資料. 由於 &lt;a href="https://en.wikipedia.org/wiki/Markdown"&gt;Markdown&lt;/a&gt; 內容轉檔後, 每一篇文章必須以獨一的超文件名稱存檔, 因此每一篇 &lt;a href="https://en.wikipedia.org/wiki/Markdown"&gt;Markdown&lt;/a&gt; 文章中的 Slug 必須採用不同的名稱, 否則 &lt;a href="https://blog.getpelican.com/"&gt;Pelican&lt;/a&gt; 轉檔時就會顯示出無法兩篇文章共用相同檔名的錯誤, 而無法正確完成轉檔.&lt;/p&gt;
&lt;p&gt;本篇網誌範例的開頭關鍵內容如下:&lt;/p&gt;
&lt;pre class="brush: html"&gt;
---
Title: w11 寫 Pelican 網誌
Date: 2022-05-11 11:00
Category: wcm
Tags: 2022SpringWCM
Slug: wcm2022-w11-write-pelican-blog
Author: kmolab
---
&lt;/pre&gt;

&lt;h2&gt;網誌摘要&lt;/h2&gt;
&lt;p&gt;在關鍵內容之後, 通常會列出網誌文章的摘要, 並以下列 html 註解內容與網誌本文進行區隔. 意即這一行區隔之前的內容為摘要, 而之後就是網誌本文.&lt;/p&gt;
&lt;pre class="brush: html"&gt;
&lt;!-- PELICAN_END_SUMMARY --&gt;
&lt;/pre&gt;

&lt;h2&gt;Markdown 文章配置&lt;/h2&gt;
&lt;p&gt;使用 &lt;a href="https://leoeditor.com/"&gt;Leo Editor&lt;/a&gt; 編輯網誌時, 可以利用節點指令中的 auto 或 clean 編輯 &lt;a href="https://en.wikipedia.org/wiki/Markdown"&gt;Markdown&lt;/a&gt; 網誌文章 (edit 指令只能導入單一節點內容存檔, 而 auto 與 clean 節點指令則可以導入子節點內容), 並以子節點加上內文 others 指令來配置文章內容, 此功能可透過樹狀結構來管理類似 XML 標註架構的 &lt;a href="https://en.wikipedia.org/wiki/Markdown"&gt;Markdown&lt;/a&gt; 文章. 若再配合 &lt;a href="https://leoeditor.com/"&gt;Leo Editor&lt;/a&gt; 中特有的 cloned 節點, 可以多篇文章共用同一個 cloned 節點內容. 例如: 可以將文章內所提及的 Anchor 標註統一採用 cloned 節點進行管理. 以下在 others 前方加上 @, 就是 &lt;a href="https://leoeditor.com/"&gt;Leo Editor&lt;/a&gt; 內文中的一種指令, 代表要將隨後的子節點內容放在 others 標示的位置上.&lt;/p&gt;
&lt;h2&gt;如何放入圖片?&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Markdown"&gt;Pelican&lt;/a&gt; 格式的文章中也支援 html 標註, 因此可以直接利用 img 標註引用圖片.&lt;/p&gt;
&lt;h2&gt;如何嵌入影片?&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Markdown"&gt;Pelican&lt;/a&gt; 格式的文章中也支援 html 標註, 因此可以直接利用 video 標註引用影片.&lt;/p&gt;
&lt;h2&gt;如何引用程式碼?&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Markdown"&gt;Pelican&lt;/a&gt; 格式的文章中也支援 html 標註, 因此可以直接利用 pre 標註與語法高亮標示呈現程式碼.&lt;/p&gt;
&lt;h2&gt;如何加入 Brython 程式?&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Markdown"&gt;Pelican&lt;/a&gt; 格式的文章中也支援 html 標註, 因此可以直接將 &lt;a href="https://brython.info/"&gt;Brython&lt;/a&gt; 對應的 Javascript 標註導入 &lt;a href="https://brython.info/"&gt;Brython&lt;/a&gt; 程式庫與啟動 scripts.&lt;/p&gt;
&lt;h2&gt;如何加入 STL 零件?&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Markdown"&gt;Pelican&lt;/a&gt; 格式的文章中也支援 html 標註, 因此可以直接利用 Javascript 標定 STL 零組件.&lt;/p&gt;</content><category term="wcm"></category><category term="2022SpringWCM"></category></entry><entry><title>w9 網際內容管理策略</title><link href="./wcm2022-w9-wcm-stratege.html" rel="alternate"></link><published>2022-04-19T11:00:00+08:00</published><updated>2022-05-01T23:46:53+08:00</updated><author><name>kmolab</name></author><id>tag:None,2022-04-19:./wcm2022-w9-wcm-stratege.html</id><summary type="html">&lt;p&gt;將課程資料的靜態網頁以 &lt;a href="https://pages.github.com/"&gt;Github Pages&lt;/a&gt; 伺服, 除了方便學員查驗各週的改版內容外, 還能直接以瀏覽器擷取. 方便性高, 但是, 免費的 &lt;a href="https://github.com"&gt;Github&lt;/a&gt; 帳號只能透過公開的倉儲使用 &lt;a href="https://pages.github.com/"&gt;Github Pages&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;將課程資料的靜態網頁以 &lt;a href="https://pages.github.com/"&gt;Github Pages&lt;/a&gt; 伺服, 除了方便學員查驗各週的改版內容外, 還能直接以瀏覽器擷取. 方便性高, 但是, 免費的 &lt;a href="https://github.com"&gt;Github&lt;/a&gt; 帳號只能透過公開的倉儲使用 &lt;a href="https://pages.github.com/"&gt;Github Pages&lt;/a&gt;.&lt;/p&gt;


&lt;h2&gt;當期課程網站&lt;/h2&gt;
&lt;p&gt;為了方便性, 當期的課程網站, 仍採 &lt;a href="https://pages.github.com/"&gt;Github Pages&lt;/a&gt; 伺服靜態網站. 使用的方法很簡單, 只要建立 public &lt;a href="https://github.com"&gt;Github&lt;/a&gt; 倉儲, 然後透過倉儲的 settings, 啟動倉儲的 &lt;a href="https://pages.github.com/"&gt;Github Pages&lt;/a&gt; 功能, 並指定從倉儲 main 分支中的 index.html 導引靜態網頁內容即可.&lt;/p&gt;
&lt;h2&gt;先前課程網站&lt;/h2&gt;
&lt;p&gt;當期課程結束後, 課程對應倉儲將轉為 private, 然後將倉儲內容移至工作站中的電腦, 以 &lt;a href="https://nginx.org"&gt;NGINX&lt;/a&gt; 伺服靜態網頁, 在 Windows 則以 &lt;a href="https://docs.pylonsproject.org/projects/waitress/en/latest/"&gt;Waitress&lt;/a&gt; 伺服動態網頁, 在 Ubuntu 則以 &lt;a href="https://uwsgi-docs.readthedocs.io/en/latest/"&gt;uwsgi&lt;/a&gt; 伺服動態網頁.&lt;/p&gt;
&lt;p&gt;Windows &lt;a href="https://nginx.org"&gt;NGINX&lt;/a&gt; nginx.conf 設定:&lt;/p&gt;
&lt;pre class="brush: jscript"&gt;
worker_processes  1;
events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;

    server {
        listen [::]:80;
        allow 2001:288:6004:XX::0/32;
        deny all;

        location / {
            root E:/downloads;
            auth_basic "For Authorized Users Only!";
            auth_basic_user_file C:/password/.htpasswd; 
        }

        location /f/ {
            alias f:/;
            auth_basic "For Authorized Users Only!";
            auth_basic_user_file C:/password/.htpasswd; 
        }

        location /g/ {
            alias g:/;
            auth_basic "For Authorized Users Only!";
            auth_basic_user_file C:/password/.htpasswd; 
            }
        } # ends server
} # ends http
&lt;/pre&gt;

&lt;p&gt;從上面 &lt;a href="https://nginx.org"&gt;NGINX&lt;/a&gt; 的設定檔案可以看出, 儘管只使用簡單的 &lt;a href="https://www.apachelounge.com/download/"&gt;Apache&lt;/a&gt; htpasswd 帳號與密碼控管連線, 但只允許特定網段連線的設定, 已經比將所有資料全部在 &lt;a href="https://pages.github.com/"&gt;Github Pages&lt;/a&gt; 開放穩當很多. 因為從教學的角度來看, 許多引用的資料可能會因為時空轉變, 原先自由授權的內容轉為特定出版品而改變使用授權, 一旦透過帳號與密碼管控, 就只是提供課程使用, 管理上比較簡便單純.&lt;/p&gt;</content><category term="wcm"></category><category term="2022SpringWCM"></category></entry><entry><title>wcm2022 w7 review</title><link href="./wcm2022-w7-review.html" rel="alternate"></link><published>2022-04-09T11:00:00+08:00</published><updated>2022-04-09T22:40:33+08:00</updated><author><name>kmolab</name></author><id>tag:None,2022-04-09:./wcm2022-w7-review.html</id><summary type="html">&lt;p&gt;wcm2022 進行至第七週總共探討下列主題:&lt;/p&gt;
</summary><content type="html">&lt;p&gt;wcm2022 進行至第七週總共探討下列主題:&lt;/p&gt;


&lt;!-- css and js for Wink3, 以下影片共用設定--&gt;
&lt;p&gt;&lt;link rel="stylesheet" type="text/css" href="./../cmsimde/static/winkPlayer.css" /&gt;&lt;/p&gt;
&lt;script type="text/javascript" src="./../cmsimde/static/winkPlayer.js"&gt;&lt;/script&gt;

&lt;h2&gt;IPv6 網路設定&lt;/h2&gt;
&lt;p&gt;說明如何利用 bat 執行設定 IPv6 網路連線&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/DDIQTTk6HZs" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;

&lt;script&gt;
var winkVideoData_ipv6 = { dataVersion: 1, frameRate: 10, buttonFrameLength: 5, buttonFrameOffset: 2, frameStops: { }, };
&lt;/script&gt;
&lt;/p&gt;
&lt;!-- 接下來將 mp4 檔案從 downloads 目錄取出 --&gt;
&lt;div class="winkVideoContainerClass"&gt;&lt;video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="./../cmsimde/static" data-varname="winkVideoData_ipv6" height="630" muted="true" width="1008"&gt;
&lt;source src="./../downloads/wcm_w2_2.mp4" type="video/mp4"/&gt;&lt;/video&gt;
&lt;div class="winkVideoOverlayClass"&gt;&lt;/div&gt;
&lt;div class="winkVideoControlBarClass"&gt;&lt;button class="winkVideoControlBarPlayButtonClass"&gt;&lt;/button&gt; &lt;button class="winkVideoControlBarPauseButtonClass"&gt;&lt;/button&gt;
&lt;div class="winkVideoControlBarProgressLeftClass"&gt;&lt;/div&gt;
&lt;div class="winkVideoControlBarProgressEmptyMiddleClass"&gt;&lt;/div&gt;
&lt;div class="winkVideoControlBarProgressRightClass"&gt;&lt;/div&gt;
&lt;div class="winkVideoControlBarProgressFilledMiddleClass"&gt;&lt;/div&gt;
&lt;div class="winkVideoControlBarProgressThumbClass"&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="winkVideoPlayOverlayClass"&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h2&gt;建立可攜程式系統&lt;/h2&gt;
&lt;p&gt;以下將介紹如何建立可攜式程式系統:&lt;/p&gt;
&lt;p&gt;此一設定將牽涉批次檔案, subst 指令與系統環境變數設定.&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/dqPIjhL3LhE" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/x8DEYTOSNYQ" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;以下為第七週課程內容 review:&lt;/p&gt;
&lt;script&gt;
var winkVideoData_review = { dataVersion: 1, frameRate: 10, buttonFrameLength: 5, buttonFrameOffset: 2, frameStops: { }, };
&lt;/script&gt;
&lt;/p&gt;
&lt;!-- 接下來將 mp4 檔案從 downloads 目錄取出 --&gt;
&lt;div class="winkVideoContainerClass"&gt;&lt;video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="./../cmsimde/static" data-varname="winkVideoData_review" height="630" muted="true" width="1008"&gt;
&lt;source src="./../downloads/w7_review/w7_review.mp4" type="video/mp4"/&gt;&lt;/video&gt;
&lt;div class="winkVideoOverlayClass"&gt;&lt;/div&gt;
&lt;div class="winkVideoControlBarClass"&gt;&lt;button class="winkVideoControlBarPlayButtonClass"&gt;&lt;/button&gt; &lt;button class="winkVideoControlBarPauseButtonClass"&gt;&lt;/button&gt;
&lt;div class="winkVideoControlBarProgressLeftClass"&gt;&lt;/div&gt;
&lt;div class="winkVideoControlBarProgressEmptyMiddleClass"&gt;&lt;/div&gt;
&lt;div class="winkVideoControlBarProgressRightClass"&gt;&lt;/div&gt;
&lt;div class="winkVideoControlBarProgressFilledMiddleClass"&gt;&lt;/div&gt;
&lt;div class="winkVideoControlBarProgressThumbClass"&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="winkVideoPlayOverlayClass"&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h2&gt;建立 Wink 教學影片&lt;/h2&gt;
&lt;p&gt;以下影片說明如何將 Wink 3.0 製作的 mp4 教學影片嵌入網頁中:&lt;/p&gt;
&lt;script&gt;
var winkVideoData_wink = {
  dataVersion: 1,
  frameRate: 10,
  buttonFrameLength: 5,
  buttonFrameOffset: 2,
  frameStops: {
  },
};
&lt;/script&gt;
&lt;/p&gt;
&lt;!-- 接下來將 mp4 檔案從 downloads 目錄取出 --&gt;
&lt;div class="winkVideoContainerClass"&gt;&lt;video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="./../cmsimde/static" data-varname="winkVideoData_wink" height="630" muted="true" width="1008"&gt;
&lt;source src="./../downloads/cmsimde_wink/wink2cmsimde.mp4" type="video/mp4"/&gt;&lt;/video&gt;
&lt;div class="winkVideoOverlayClass"&gt;&lt;/div&gt;
&lt;div class="winkVideoControlBarClass"&gt;&lt;button class="winkVideoControlBarPlayButtonClass"&gt;&lt;/button&gt; &lt;button class="winkVideoControlBarPauseButtonClass"&gt;&lt;/button&gt;
&lt;div class="winkVideoControlBarProgressLeftClass"&gt;&lt;/div&gt;
&lt;div class="winkVideoControlBarProgressEmptyMiddleClass"&gt;&lt;/div&gt;
&lt;div class="winkVideoControlBarProgressRightClass"&gt;&lt;/div&gt;
&lt;div class="winkVideoControlBarProgressFilledMiddleClass"&gt;&lt;/div&gt;
&lt;div class="winkVideoControlBarProgressThumbClass"&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="winkVideoPlayOverlayClass"&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h1&gt;810WIFI 連線&lt;/h1&gt;
&lt;h2&gt;建立 wcm2022&lt;/h2&gt;
&lt;p&gt;網際內容管理課程要求每位學員都必須建立 Github 帳號, 並自行利用 submodule 方式建立 cmsimde 動態與靜態網頁, 相關教學影片如下:&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/1RbrSOfnFd4" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h1&gt;以 token 推送&lt;/h1&gt;
&lt;p&gt;以下影片說明如何使用 Personal Access Token 執行 git push:&lt;/p&gt;
&lt;script&gt;
var winkVideoData_token = {
  dataVersion: 1,
  frameRate: 10,
  buttonFrameLength: 5,
  buttonFrameOffset: 2,
  frameStops: {
  },
};
&lt;/script&gt;
&lt;/p&gt;
&lt;!-- 接下來將 mp4 檔案從 downloads 目錄取出 --&gt;
&lt;div class="winkVideoContainerClass"&gt;&lt;video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="./../cmsimde/static" data-varname="winkVideoData_token" height="630" muted="true" width="1008"&gt;
&lt;source src="./../downloads/token_wink/github_token.mp4" type="video/mp4"/&gt;&lt;/video&gt;
&lt;div class="winkVideoOverlayClass"&gt;&lt;/div&gt;
&lt;div class="winkVideoControlBarClass"&gt;&lt;button class="winkVideoControlBarPlayButtonClass"&gt;&lt;/button&gt; &lt;button class="winkVideoControlBarPauseButtonClass"&gt;&lt;/button&gt;
&lt;div class="winkVideoControlBarProgressLeftClass"&gt;&lt;/div&gt;
&lt;div class="winkVideoControlBarProgressEmptyMiddleClass"&gt;&lt;/div&gt;
&lt;div class="winkVideoControlBarProgressRightClass"&gt;&lt;/div&gt;
&lt;div class="winkVideoControlBarProgressFilledMiddleClass"&gt;&lt;/div&gt;
&lt;div class="winkVideoControlBarProgressThumbClass"&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="winkVideoPlayOverlayClass"&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h1&gt;以 ssh 推送&lt;/h1&gt;
&lt;p&gt;以下影片說明如何在 Windows IPv6 環境下, 利用 PUTTY 以 SSH 協定執行 git push:&lt;/p&gt;
&lt;script&gt;
var winkVideoData_ssh = {
  dataVersion: 1,
  frameRate: 10,
  buttonFrameLength: 5,
  buttonFrameOffset: 2,
  frameStops: {
  },
};
&lt;/script&gt;
&lt;/p&gt;
&lt;div class="winkVideoContainerClass"&gt;&lt;video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="./../cmsimde/static" data-varname="winkVideoData_ssh" height="630" muted="true" width="1008"&gt;
&lt;source src="./../downloads/ssh_wink/wink_ssh.mp4" type="video/mp4"/&gt;&lt;/video&gt;
&lt;div class="winkVideoOverlayClass"&gt;&lt;/div&gt;
&lt;div class="winkVideoControlBarClass"&gt;&lt;button class="winkVideoControlBarPlayButtonClass"&gt;&lt;/button&gt; &lt;button class="winkVideoControlBarPauseButtonClass"&gt;&lt;/button&gt;
&lt;div class="winkVideoControlBarProgressLeftClass"&gt;&lt;/div&gt;
&lt;div class="winkVideoControlBarProgressEmptyMiddleClass"&gt;&lt;/div&gt;
&lt;div class="winkVideoControlBarProgressRightClass"&gt;&lt;/div&gt;
&lt;div class="winkVideoControlBarProgressFilledMiddleClass"&gt;&lt;/div&gt;
&lt;div class="winkVideoControlBarProgressThumbClass"&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="winkVideoPlayOverlayClass"&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h2&gt;配置 Brython 環境&lt;/h2&gt;
&lt;h2&gt;設定 Pelican 網誌&lt;/h2&gt;
&lt;h1&gt;Blogger 網誌同步&lt;/h1&gt;
&lt;h2&gt;計算機概論&lt;/h2&gt;
&lt;h1&gt;電腦硬體拆解&lt;/h1&gt;
&lt;h2&gt;建立 Virtualbox 虛擬主機&lt;/h2&gt;
&lt;h1&gt;安裝配置 nginx&lt;/h1&gt;
&lt;p&gt;以下說明 nginx 安裝流程:&lt;/p&gt;
&lt;script&gt;
var winkVideoData_nginx = { dataVersion: 1, frameRate: 10, buttonFrameLength: 5, buttonFrameOffset: 2, frameStops: { }, };
&lt;/script&gt;
&lt;!-- 接下來將 mp4 檔案從 downloads 目錄取出 --&gt;
&lt;div class="winkVideoContainerClass"&gt;&lt;video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="./../cmsimde/static" data-varname="winkVideoData_nginx" height="630" muted="true" width="1008"&gt;
&lt;source src="./../downloads/w7_nginx/w7_nginx.mp4" type="video/mp4"/&gt;&lt;/video&gt;
&lt;div class="winkVideoOverlayClass"&gt;&lt;/div&gt;
&lt;div class="winkVideoControlBarClass"&gt;&lt;button class="winkVideoControlBarPlayButtonClass"&gt;&lt;/button&gt; &lt;button class="winkVideoControlBarPauseButtonClass"&gt;&lt;/button&gt;
&lt;div class="winkVideoControlBarProgressLeftClass"&gt;&lt;/div&gt;
&lt;div class="winkVideoControlBarProgressEmptyMiddleClass"&gt;&lt;/div&gt;
&lt;div class="winkVideoControlBarProgressRightClass"&gt;&lt;/div&gt;
&lt;div class="winkVideoControlBarProgressFilledMiddleClass"&gt;&lt;/div&gt;
&lt;div class="winkVideoControlBarProgressThumbClass"&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="winkVideoPlayOverlayClass"&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h1&gt;Windows 10 虛擬主機&lt;/h1&gt;
&lt;p&gt;在 HP Proliant ML 10 伺服器上安裝 Virtualbox 與 Windows 10 過程影片:&lt;/p&gt;
&lt;script&gt;
var winkVideoData_win10 = { dataVersion: 1, frameRate: 10, buttonFrameLength: 5, buttonFrameOffset: 2, frameStops: { }, };
&lt;/script&gt;
&lt;/p&gt;
&lt;!-- 接下來將 mp4 檔案從 downloads 目錄取出 --&gt;
&lt;div class="winkVideoContainerClass"&gt;&lt;video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="./../cmsimde/static" data-varname="winkVideoData_win10" height="630" muted="true" width="1008"&gt;
&lt;source src="./../downloads/w7_hp_virtualbox_win/w7_hp_virtualbox_win.mp4" type="video/mp4"/&gt;&lt;/video&gt;
&lt;div class="winkVideoOverlayClass"&gt;&lt;/div&gt;
&lt;div class="winkVideoControlBarClass"&gt;&lt;button class="winkVideoControlBarPlayButtonClass"&gt;&lt;/button&gt; &lt;button class="winkVideoControlBarPauseButtonClass"&gt;&lt;/button&gt;
&lt;div class="winkVideoControlBarProgressLeftClass"&gt;&lt;/div&gt;
&lt;div class="winkVideoControlBarProgressEmptyMiddleClass"&gt;&lt;/div&gt;
&lt;div class="winkVideoControlBarProgressRightClass"&gt;&lt;/div&gt;
&lt;div class="winkVideoControlBarProgressFilledMiddleClass"&gt;&lt;/div&gt;
&lt;div class="winkVideoControlBarProgressThumbClass"&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="winkVideoPlayOverlayClass"&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h1&gt;Ubuntu 22.04 虛擬主機&lt;/h1&gt;
&lt;h2&gt;Fossil SCM server&lt;/h2&gt;
&lt;h2&gt;Tetris on Brython&lt;/h2&gt;</content><category term="wcm"></category><category term="2022SpringWCM"></category></entry><entry><title>hp 與 ub 伺服器</title><link href="./2022-WCM-hp-and-ub-server.html" rel="alternate"></link><published>2022-04-01T11:00:00+08:00</published><updated>2022-04-01T23:00:07+08:00</updated><author><name>kmolab</name></author><id>tag:None,2022-04-01:./2022-WCM-hp-and-ub-server.html</id><summary type="html">&lt;p&gt;2022 WCM 課程利用一台 2015 年出廠的 HPE Proliant ML 10 v2 伺服器, 以實體 Windows 10 與 Ubuntu 22.04 分別建立 hp (c13) 與 ub (c14) 等兩台伺服器.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2022 WCM 課程利用一台 2015 年出廠的 HPE Proliant ML 10 v2 伺服器, 以實體 Windows 10 與 Ubuntu 22.04 分別建立 hp (c13) 與 ub (c14) 等兩台伺服器.&lt;/p&gt;


&lt;h2&gt;Ubuntu 建立管理用戶&lt;/h2&gt;
&lt;p&gt;Ubuntu 22.04 安裝完成後, 必須先設法上網, 可以使用 /etc/netplan/*.yaml 檔案進行設定:&lt;/p&gt;
&lt;pre class="brush: jscript"&gt;
network:
  version: 2
  ethernets:
    enp0s3:
      addresses:
        - 2001:288:6004:XX:XXXX::14/64
      routes:
        - to: default
          via:  2001:288:6004:XX::254
      nameservers:
        addresses: 
          - 2001:b000:168::1
&lt;/pre&gt;

&lt;p&gt;其中與 Ubuntu 20.04 的 netplan 網路設定差異是 gateway6 已經改為 routes.&lt;/p&gt;
&lt;p&gt;網路啟動後, 通常會以 sudo apt update 進行更新後, 先安裝 net-tools 與 xterm.&lt;/p&gt;
&lt;pre class="brush: jscript"&gt;
sudo apt install net-tools
sudo apt install xterm
&lt;/pre&gt;

&lt;p&gt;安裝 net-tools 是為了能夠執行 ifconfig, 而 xterm 則是可以用 xterm &amp;amp; 帶出 X-Window
至於在 ifconfig 能夠執行之前, 也就是網路尚未完成設定前, 若要查詢 network device 的名稱, 可以採用 ip l show 指令.&lt;/p&gt;
&lt;h1&gt;建立新用戶&lt;/h1&gt;
&lt;p&gt;在 Ubuntu 建立新用戶, 可以使用 sudo adduser username, 若要將該用戶轉為系統管理者, 則可以使用:&lt;/p&gt;
&lt;pre class="brush: jscript"&gt;
sudo usermod -aG sudo username
&lt;/pre&gt;

&lt;h1&gt;安裝 nginx&lt;/h1&gt;
&lt;p&gt;在 Ubuntu 安裝 nginx, 可以採用 sudo apt install nginx, 之後的設定檔案位於 /etc/nginx/sites-available/default.&lt;/p&gt;
&lt;p&gt;sudo service nginx restart&lt;/p&gt;
&lt;p&gt;sudo service nginx stop&lt;/p&gt;
&lt;p&gt;sudo service nginx start&lt;/p&gt;
&lt;h1&gt;安裝 stunnel&lt;/h1&gt;
&lt;p&gt;在 Ubuntu 安裝 stunnel, 可以採用 sudo apt install stunnel, 之後的設定檔案可自行建立, 放入 /etc/stunnel 目錄, 名稱可設為 stunnel.conf, 至於設定範例檔案則位於 /usr/share/doc/stunnel4/examples/stunnel.conf-sample&lt;/p&gt;
&lt;h1&gt;uwsgi&lt;/h1&gt;
&lt;p&gt;目前的 &lt;a href="https://github.com/mdecycu/cmsimde"&gt;https://github.com/mdecycu/cmsimde&lt;/a&gt; 使用 Flask 編寫, 執行時需要額外 Python3 模組, 可以利用 pip3 安裝, 但必須先以 sudo apt install python3-pip 安裝 pip3:&lt;/p&gt;
&lt;pre class="brush: jscript"&gt;
sudo pip3 install flask flask_cors bs4 lxml pelican markdown leo pyopenssl
&lt;/pre&gt;

&lt;p&gt;其中 cmsimde 靜態網頁可以利用 nginx 伺服, 網站簽證用的 key 與 certificate 需要 openssl, 而 cmsimde 動態網頁則需要透過 uwsgi 進行部署.&lt;/p&gt;
&lt;p&gt;利用 openssl 建立 cmsimde.key 與 cmsimde.crt 指令:&lt;/p&gt;
&lt;pre class="brush: jscript"&gt;
sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout cmsimde.key -out cmsimde.crt
&lt;/pre&gt;

&lt;p&gt;與 uwsgi 有關的 Ubuntu 系統安裝則包括:&lt;/p&gt;
&lt;pre class="brush: jscript"&gt;
// 安裝 pip3
sudo apt install python3-pip
// 安裝 python 編譯開發系統
sudo apt install build-essential python3-dev
// 安裝 uwsgi 模組
sudo pip3 install uwsgi
// 安裝 nginx 伺服套件與 uwsgi python3 plugin 程式庫
sudo apt install nginx uwsgi-plugin-python3
&lt;/pre&gt;

&lt;p&gt;用來伺服 cmsimde 靜態網頁的 nginx 參考設定:&lt;/p&gt;
&lt;p&gt;/etc/nginx/nginx.conf 中 user 必須設為 pj2022, 也就是 wcm2022 倉儲的擁有者&lt;/p&gt;
&lt;pre class="brush: jscript"&gt;
# for ub.cycu.org
# /etc/nginx/nginx.conf user pj2022
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    root /home/pj2022/github/wcm2022;
    index index.html;

    location / {
        # First attempt to serve request as file, then
        # as directory, then fall back to displaying a 404.
        try_files $uri $uri/ =404;
    }

}

# for /home/pj2022/github/wcm2022
server {
    listen 8443 ssl default_server;
    listen [::]:8443 ssl default_server;

    location / {
        include uwsgi_params;
        uwsgi_pass  127.0.0.1:9443;
    }

    ssl_certificate /etc/stunnel/cmsimde.crt;
    ssl_certificate_key /etc/stunnel/cmsimde.key;
    ssl_session_timeout 5m;
    ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES";
    ssl_prefer_server_ciphers on;
    try_files $uri $uri/ =404;
}
&lt;/pre&gt;

&lt;p&gt;cmsimde 動態網站使用 uwsgi 啟動時, wcm2022/init.py 中的 uwsgi 必須設為 True.&lt;/p&gt;
&lt;p&gt;uwsgi_ini/uwsgi.ini&lt;/p&gt;
&lt;pre class="brush: jscript"&gt;
socket = 127.0.0.1:9443
uid = pj2022
gid = pj2022
plugins-dir = /usr/lib/uwsgi/plugins/
plugin = python3
master = true
process = 4
threads = 2
chdir = /home/pj2022/github/wcm2022/cmsimde
wsgi-file = /home/pj2022/github/wcm2022/cmsimde/wsgi.py
&lt;/pre&gt;

&lt;p&gt;啟動 uwsgi 指令, 將會逐一啟動 wsgi_ini 目錄中個別 .ini 檔案:&lt;/p&gt;
&lt;pre class="brush: jscript"&gt;
sudo /usr/bin/uwsgi --emperor /home/user_account/wsgi_ini
&lt;/pre&gt;

&lt;p&gt;一般則利用 Ubuntu 系統服務, 用來啟動 uwsgi:&lt;/p&gt;
&lt;p&gt;/etc/systemd/system 的 cmsimde.service 服務啟動檔案內容:&lt;/p&gt;
&lt;pre class="brush: jscript"&gt;
[Unit]
Description=uWSGI to serve CMSiMDE
After=network.target

[Service]
User=pj2022
Group=pj2022
WorkingDirectory=/home/pj2022/uwsgi_ini
ExecStart=/usr/bin/uwsgi --emperor /home/pj2022/uwsgi_ini

[Install]
WantedBy=multi-user.target
&lt;/pre&gt;

&lt;p&gt;/etc/systemd/system/cmsimde.service 必須透過 sudo chmod uog+x cmsimde.service 設定讓檔案可以執行.&lt;/p&gt;
&lt;p&gt;接著將 cmsimde 服務設為隨系統開機啟動:&lt;/p&gt;
&lt;p&gt;sudo systemctl enable cmsimde&lt;/p&gt;
&lt;p&gt;若要取消 cmsimde 服務隨系統開機啟動:&lt;/p&gt;
&lt;p&gt;sudo systemctl disable cmsimde&lt;/p&gt;
&lt;p&gt;手動啟動 cmsimde.service 服務&lt;/p&gt;
&lt;p&gt;sudo systemctl start cmsimde&lt;/p&gt;
&lt;p&gt;手動停止 cmsimde.service 服務&lt;/p&gt;
&lt;p&gt;sudo systemctl stop cmsimde&lt;/p&gt;</content><category term="Server"></category><category term="2022SpringWCM"></category></entry><entry><title>2022 Spring 網際內容管理</title><link href="./2022-WCM.html" rel="alternate"></link><published>2022-03-28T11:00:00+08:00</published><updated>2022-03-31T21:49:59+08:00</updated><author><name>kmolab</name></author><id>tag:None,2022-03-28:./2022-WCM.html</id><summary type="html">&lt;p&gt;2022 Spring 網際內容管理.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2022 Spring 網際內容管理.&lt;/p&gt;


&lt;h2&gt;網誌&lt;/h2&gt;
&lt;p&gt;網誌指的是利用全球資訊網紀錄特定事件始末.&lt;/p&gt;
&lt;p&gt;許多事件發展流程有其特定的情境, 網誌通常會從筆者的視角加以觀察, 試著讓讀者了解事情是如何發生, 如何被處理, 以及如何暫時告一段落. &lt;/p&gt;
&lt;p&gt;就以網際內容管理這一門課程來說, 其源起是因為製造與商業管理整合下, 透過全球資訊網來部署產品生命週期, 應該是一項合理的規劃. 其中牽涉機械設計、自動化工程、資訊管理與工業管理等領域知識的整合.&lt;/p&gt;
&lt;p&gt;只不過要將產品開發過程中的電腦輔助設計流程, 以及自動化製程規劃的模擬套上全球資訊網介面, 就免不了必須先對全球資訊網前後端程式技術有通盤了解, 才能著手將 2D 與 3D 產品設計資訊逐步部署到伺服器, 由客戶端的瀏覽器進行互動擷取.&lt;/p&gt;
&lt;p&gt;並且隨著發想中的產品逐步成形, 越靠近工業管理端的規劃時, 產、銷、人、發、財交互形成的各種作業研究, 在企業資源管理與產品生命週期管理的技術不斷演進下, 各領域人馬的網誌, 理應精彩萬分.&lt;/p&gt;
&lt;p&gt;但快速的時間進程與各項技術版本的變化更迭, 讓許多事件來不及被用網誌詳細記錄之前, 就已經失去效用, &lt;/p&gt;
&lt;p&gt;因此, 全球資訊網記事誌只能盡力而為, 在內容失效前就必須設法廣為散播. 將 &lt;a href="https://blog.getpelican.com/"&gt;Pelican 網誌&lt;/a&gt; 與 Google &lt;a href="https://www.blogger.com"&gt;Blogger&lt;/a&gt; 內容同步整合, 應該是個可行方案.&lt;/p&gt;
&lt;h2&gt;&lt;a href="https://www.blogger.com"&gt;Blogger&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;將 &lt;a href="https://www.blogger.com"&gt;Blogger&lt;/a&gt; 內容與 &lt;a href="https://blog.getpelican.com/"&gt;Pelican 網誌&lt;/a&gt;同步的原理很簡單, 就是在編寫 &lt;a href="https://blog.getpelican.com/"&gt;Pelican 網誌&lt;/a&gt; 內容後, 把格式轉為 &lt;a href="https://www.blogger.com"&gt;Blogger&lt;/a&gt; 網誌編輯所需的超文件, 然後根據 &lt;a href="https://www.blogger.com"&gt;Blogger&lt;/a&gt; id 與權限設定, 同時發布在兩個不同的網誌系統上.&lt;/p&gt;
&lt;p&gt;由於 &lt;a href="https://blog.getpelican.com/"&gt;Pelican 網誌&lt;/a&gt; 採用 Github 倉儲管理, 因此每次編輯都有提交版本, 而 &lt;a href="https://www.blogger.com"&gt;Blogger&lt;/a&gt; 則只列出最新編輯後的內容版本.&lt;/p&gt;
&lt;p&gt;將網誌內容透過程式方法發布到 &lt;a href="https://www.blogger.com"&gt;Blogger&lt;/a&gt; 所依賴的是 Google 提供的 &lt;a href="https://developers.google.com/blogger"&gt;Blogger API&lt;/a&gt;, 目前已經到了第三版.&lt;/p&gt;
&lt;p&gt;現在透過 AI 技術已經可以讓產品生命週期過程中的許多機器, 自行以程式方法發布網誌, 除了按照規劃時間列出各項產品開發與製造的統計資料外, 透過語意資料庫與不斷的作文練習, 寫出來的網誌已經越來越&lt;a href="https://www.youtube.com/watch?v=moZbwurFhVE"&gt;神乎其技&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a href="https://mde.tw/wcm2022_guide/content/run.html?src=https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/738223b424c3f5f12961070aa8a75185177420b6/pygame_to_brython_tetris.py"&gt;Tetris&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;今年&lt;a href="https://mde.tw/wcm2022_guide"&gt;網際內容管理&lt;/a&gt;課程的主題是 &lt;a href="https://mde.tw/wcm2022_guide/content/run.html?src=https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/738223b424c3f5f12961070aa8a75185177420b6/pygame_to_brython_tetris.py"&gt;Tetris&lt;/a&gt;, 也就是一個採用 &lt;a href="https://brython.info/"&gt;Brython&lt;/a&gt; 編寫的線上遊戲. 透過分組協同, 我們想要從個人電腦的硬體拆解與組裝開始, 逐一探討下列主題:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;個人電腦的組成 - &lt;a href="https://link.springer.com/book/10.1007/978-1-4684-6419-1"&gt;Understanding Personal Computer Hardware&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;個人電腦的操作系統 - &lt;a href="https://link.springer.com/book/10.1007/978-3-642-20432-6"&gt;Unix Operating System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;學校提供那些數位資源? - &lt;a href="https://web.lib.nfu.edu.tw/pub/pomii/webpage/Promote/SSL-VPNguide.pdf"&gt;VPN&lt;/a&gt;、&lt;a href="https://software.nfu.edu.tw/"&gt;校園授權軟體&lt;/a&gt;、&lt;a href="https://link.springer.com/"&gt;英文電子書&lt;/a&gt;、&lt;a href="https://www.autodesk.com/education/edu-software"&gt;Inventor&lt;/a&gt;、&lt;a href="https://www.solidworks.com/"&gt;Solidworks&lt;/a&gt;、&lt;a href="https://www.plm.automation.siemens.com/global/en/products/nx/"&gt;NX&lt;/a&gt;、&lt;a href="https://www.comsol.com/"&gt;Comsol&lt;/a&gt;、&lt;a href="https://www.microsoft.com/zh-tw/education/products/office"&gt;Office 365 教育版&lt;/a&gt; 含 5TB OneDrive 空間&lt;/li&gt;
&lt;li&gt;硬碟磁區如何複製 - &lt;a href="https://clonezilla.org/"&gt;clonezilla&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;在硬碟上安裝 Windows 10&lt;/li&gt;
&lt;li&gt;在 &lt;a href="https://www.virtualbox.org/"&gt;Virtualbox&lt;/a&gt; 上安裝 Windows 10&lt;/li&gt;
&lt;li&gt;在 &lt;a href="https://www.virtualbox.org/"&gt;Virtualbox&lt;/a&gt; 上安裝 &lt;a href="https://cdimage.ubuntu.com/daily-live/current/"&gt;Ubuntu 22.04&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;在 Windows 10 上配置可攜 Python 程式系統&lt;/li&gt;
&lt;li&gt;在 &lt;a href="https://cdimage.ubuntu.com/daily-live/current/"&gt;Ubuntu 22.04&lt;/a&gt; 上配置 Python3 程式系統&lt;/li&gt;
&lt;li&gt;在 Windows 10 上配置 nginx 全球資訊網伺服器&lt;/li&gt;
&lt;li&gt;在 &lt;a href="https://cdimage.ubuntu.com/daily-live/current/"&gt;Ubuntu 22.04&lt;/a&gt; 上配置 nginx 全球資訊網伺服器&lt;/li&gt;
&lt;li&gt;在 Windows 10 上配置 &lt;a href="https://github.com/wcm2022/wcm2022"&gt;wcm2022&lt;/a&gt; 動態與靜態伺服器&lt;/li&gt;
&lt;li&gt;在 &lt;a href="https://cdimage.ubuntu.com/daily-live/current/"&gt;Ubuntu 22.04&lt;/a&gt; 上配置 &lt;a href="https://github.com/wcm2022/wcm2022"&gt;wcm2022&lt;/a&gt; 動態與靜態伺服器&lt;/li&gt;
&lt;li&gt;在 Windows 10 上配置 &lt;a href="https://www2.fossil-scm.org"&gt;Fossil SCM&lt;/a&gt; 全球資訊網伺服器&lt;/li&gt;
&lt;li&gt;將 &lt;a href="https://mde.tw/wcm2022_guide/content/run.html?src=https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/738223b424c3f5f12961070aa8a75185177420b6/pygame_to_brython_tetris.py"&gt;Tetris&lt;/a&gt; 配置到上述各系統中&lt;/li&gt;
&lt;/ul&gt;</content><category term="Misc"></category><category term="2022SpringWCM"></category></entry></feed>